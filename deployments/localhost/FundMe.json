{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x36f907a8b28dc3aac2efb75b796bfa070de341eea0d10a9d419c2bf8ea1ba3c0",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "994297",
    "logsBloom": "0x
    "blockHash": "0x4a00ff4ea2d23304d0aaf3588b769dcabacdeeca851c22fd9ef7c131977c4126",
    "transactionHash": "0x36f907a8b28dc3aac2efb75b796bfa070de341eea0d10a9d419c2bf8ea1ba3c0",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "994297",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "4569ff390816e8688270adc6e22a24e6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//Get funds from user\\n//withdraw funds\\n//set minimum funding value in USD\\n\\n//853854\\n\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n    address[] public s_funders;\\n    mapping(address => uint256) public s_addressToAmountFunded;\\n    address public immutable i_owner;\\n\\n    AggregatorV3Interface public s_priceFeed;\\n\\n    //MODIFIERS\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner , \\\"Sender is not the owner\\\");\\n\\n        //gas efficient\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    // Functions Order:\\n    //// constructor\\n    //// receive\\n    //// fallback\\n    //// external\\n    //// public\\n    //// internal\\n    //// private\\n    //// view / pure\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    // receive() external payable {\\n    //     fund();\\n    // }\\n\\n    // fallback() external payable {\\n    //     fund();\\n    // }\\n\\n    function fund() public payable {\\n        //min fund amt in usd\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"Did not recieve enough ETH!!\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funderAddress = s_funders[funderIndex];\\n            s_addressToAmountFunded[funderAddress] = 0;\\n        }\\n        //reset array\\n        s_funders = new address[](0);\\n        //withdrawing funds\\n        //3 ways to send tokens:\\n\\n        //1)transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n\\n        //2)send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess , \\\"Send failed\\\");\\n\\n        //3)call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    //if someone sends tokens without calling fund function\\n    //special functions\\n}\\n\",\"keccak256\":\"0x8286e8f3275bba183e2c8ef47e97e98d82970881c3016490fabe23bcb47bf542\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        //interact with outside contract , we need:\\n        //1) ABI\\n\\n        //dont need to get the entire contract we just need the abi\\n        //we use \\\"Interface\\\" for this-> gives minimilistic abi by taking address as input\\n        //directly import from github using npm\\n\\n        //2) adress : 0x694AA1769357215DE4FAC081bf1f309aDC325306\\n\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0x694AA1769357215DE4FAC081bf1f309aDC325306\\n        // );\\n        (, int answer, , , ) = priceFeed.latestRoundData(); //ETH in terms of USD with 8 decimal\\n        return uint256(answer * 1e10); // asmsg.valu is in wei ie 1e-18 eth\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 inUSD = (ethAmount * getPrice(priceFeed)) / 1e18;\\n        return inUSD;\\n    }\\n}\\n\",\"keccak256\":\"0xee68816e72f7fe9372dd5f54d3f8453dfb0212e2fa7dfeeac6e25deab60b34ae\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200122338038062001223833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c61109d62000186600039600081816101e60152818161059b015281816107910152610829015261109d6000f3fe60806040526004361061007b5760003560e01c80636b69a5921161004e5780636b69a5921461013c578063b60d428814610167578063be2693f014610171578063dba6335f1461017b5761007b565b80630ec3b027146100805780631bf6132d146100ab5780633ccfd60b146100e857806354861af7146100ff575b600080fd5b34801561008c57600080fd5b506100956101a6565b6040516100a29190610a47565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd9190610aa5565b6101cc565b6040516100df9190610aeb565b60405180910390f35b3480156100f457600080fd5b506100fd6101e4565b005b34801561010b57600080fd5b5061012660048036038101906101219190610b32565b610424565b6040516101339190610b6e565b60405180910390f35b34801561014857600080fd5b50610151610463565b60405161015e9190610aeb565b60405180910390f35b61016f610470565b005b610179610599565b005b34801561018757600080fd5b50610190610827565b60405161019d9190610b6e565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610269576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561031457600080828154811061028e5761028d610b89565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061030c90610be7565b91505061026c565b50600067ffffffffffffffff8111156103305761032f610c30565b5b60405190808252806020026020018201604052801561035e5781602001602082028036833780820191505090505b5060009080519060200190610374929190610921565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161039b90610c90565b60006040518083038185875af1925050503d80600081146103d8576040519150601f19603f3d011682016040523d82523d6000602084013e6103dd565b606091505b5050905080610421576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041890610d02565b60405180910390fd5b50565b6000818154811061043457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b6802b5e3af16b18800006104af600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461084b90919063ffffffff16565b10156104f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e790610d6e565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461061e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106a157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610657575b5050505050905060005b815181101561072c5760008282815181106106c9576106c8610b89565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061072490610be7565b9150506106ab565b50600067ffffffffffffffff81111561074857610747610c30565b5b6040519080825280602002602001820160405280156107765781602001602082028036833780820191505090505b506000908051906020019061078c929190610921565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107d390610c90565b60006040518083038185875af1925050503d8060008114610810576040519150601f19603f3d011682016040523d82523d6000602084013e610815565b606091505b505090508061082357600080fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080670de0b6b3a764000061086084610881565b8561086b9190610d8e565b6108759190610e17565b90508091505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108ca57600080fd5b505afa1580156108de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109029190610ed5565b5050509150506402540be400816109199190610f50565b915050919050565b82805482825590600052602060002090810192821561099a579160200282015b828111156109995782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610941565b5b5090506109a791906109ab565b5090565b5b808211156109c45760008160009055506001016109ac565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a0d610a08610a03846109c8565b6109e8565b6109c8565b9050919050565b6000610a1f826109f2565b9050919050565b6000610a3182610a14565b9050919050565b610a4181610a26565b82525050565b6000602082019050610a5c6000830184610a38565b92915050565b600080fd5b6000610a72826109c8565b9050919050565b610a8281610a67565b8114610a8d57600080fd5b50565b600081359050610a9f81610a79565b92915050565b600060208284031215610abb57610aba610a62565b5b6000610ac984828501610a90565b91505092915050565b6000819050919050565b610ae581610ad2565b82525050565b6000602082019050610b006000830184610adc565b92915050565b610b0f81610ad2565b8114610b1a57600080fd5b50565b600081359050610b2c81610b06565b92915050565b600060208284031215610b4857610b47610a62565b5b6000610b5684828501610b1d565b91505092915050565b610b6881610a67565b82525050565b6000602082019050610b836000830184610b5f565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bf282610ad2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c2557610c24610bb8565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c7a600083610c5f565b9150610c8582610c6a565b600082019050919050565b6000610c9b82610c6d565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610cec600b83610ca5565b9150610cf782610cb6565b602082019050919050565b60006020820190508181036000830152610d1b81610cdf565b9050919050565b7f446964206e6f74207265636965766520656e6f75676820455448212100000000600082015250565b6000610d58601c83610ca5565b9150610d6382610d22565b602082019050919050565b60006020820190508181036000830152610d8781610d4b565b9050919050565b6000610d9982610ad2565b9150610da483610ad2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ddd57610ddc610bb8565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e2282610ad2565b9150610e2d83610ad2565b925082610e3d57610e3c610de8565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e6781610e48565b8114610e7257600080fd5b50565b600081519050610e8481610e5e565b92915050565b6000819050919050565b610e9d81610e8a565b8114610ea857600080fd5b50565b600081519050610eba81610e94565b92915050565b600081519050610ecf81610b06565b92915050565b600080600080600060a08688031215610ef157610ef0610a62565b5b6000610eff88828901610e75565b9550506020610f1088828901610eab565b9450506040610f2188828901610ec0565b9350506060610f3288828901610ec0565b9250506080610f4388828901610e75565b9150509295509295909350565b6000610f5b82610e8a565b9150610f6683610e8a565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610fa557610fa4610bb8565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610fe257610fe1610bb8565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561101f5761101e610bb8565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561105c5761105b610bb8565b5b82820290509291505056fea26469706673582212203a0911705f32bf571734ad05563fb0a65f76f8eecbf80c2a7c753fca8dc3b63064736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80636b69a5921161004e5780636b69a5921461013c578063b60d428814610167578063be2693f014610171578063dba6335f1461017b5761007b565b80630ec3b027146100805780631bf6132d146100ab5780633ccfd60b146100e857806354861af7146100ff575b600080fd5b34801561008c57600080fd5b506100956101a6565b6040516100a29190610a47565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd9190610aa5565b6101cc565b6040516100df9190610aeb565b60405180910390f35b3480156100f457600080fd5b506100fd6101e4565b005b34801561010b57600080fd5b5061012660048036038101906101219190610b32565b610424565b6040516101339190610b6e565b60405180910390f35b34801561014857600080fd5b50610151610463565b60405161015e9190610aeb565b60405180910390f35b61016f610470565b005b610179610599565b005b34801561018757600080fd5b50610190610827565b60405161019d9190610b6e565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610269576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561031457600080828154811061028e5761028d610b89565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061030c90610be7565b91505061026c565b50600067ffffffffffffffff8111156103305761032f610c30565b5b60405190808252806020026020018201604052801561035e5781602001602082028036833780820191505090505b5060009080519060200190610374929190610921565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161039b90610c90565b60006040518083038185875af1925050503d80600081146103d8576040519150601f19603f3d011682016040523d82523d6000602084013e6103dd565b606091505b5050905080610421576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041890610d02565b60405180910390fd5b50565b6000818154811061043457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b6802b5e3af16b18800006104af600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461084b90919063ffffffff16565b10156104f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e790610d6e565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461061e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106a157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610657575b5050505050905060005b815181101561072c5760008282815181106106c9576106c8610b89565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061072490610be7565b9150506106ab565b50600067ffffffffffffffff81111561074857610747610c30565b5b6040519080825280602002602001820160405280156107765781602001602082028036833780820191505090505b506000908051906020019061078c929190610921565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107d390610c90565b60006040518083038185875af1925050503d8060008114610810576040519150601f19603f3d011682016040523d82523d6000602084013e610815565b606091505b505090508061082357600080fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080670de0b6b3a764000061086084610881565b8561086b9190610d8e565b6108759190610e17565b90508091505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108ca57600080fd5b505afa1580156108de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109029190610ed5565b5050509150506402540be400816109199190610f50565b915050919050565b82805482825590600052602060002090810192821561099a579160200282015b828111156109995782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610941565b5b5090506109a791906109ab565b5090565b5b808211156109c45760008160009055506001016109ac565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a0d610a08610a03846109c8565b6109e8565b6109c8565b9050919050565b6000610a1f826109f2565b9050919050565b6000610a3182610a14565b9050919050565b610a4181610a26565b82525050565b6000602082019050610a5c6000830184610a38565b92915050565b600080fd5b6000610a72826109c8565b9050919050565b610a8281610a67565b8114610a8d57600080fd5b50565b600081359050610a9f81610a79565b92915050565b600060208284031215610abb57610aba610a62565b5b6000610ac984828501610a90565b91505092915050565b6000819050919050565b610ae581610ad2565b82525050565b6000602082019050610b006000830184610adc565b92915050565b610b0f81610ad2565b8114610b1a57600080fd5b50565b600081359050610b2c81610b06565b92915050565b600060208284031215610b4857610b47610a62565b5b6000610b5684828501610b1d565b91505092915050565b610b6881610a67565b82525050565b6000602082019050610b836000830184610b5f565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bf282610ad2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c2557610c24610bb8565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c7a600083610c5f565b9150610c8582610c6a565b600082019050919050565b6000610c9b82610c6d565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610cec600b83610ca5565b9150610cf782610cb6565b602082019050919050565b60006020820190508181036000830152610d1b81610cdf565b9050919050565b7f446964206e6f74207265636965766520656e6f75676820455448212100000000600082015250565b6000610d58601c83610ca5565b9150610d6382610d22565b602082019050919050565b60006020820190508181036000830152610d8781610d4b565b9050919050565b6000610d9982610ad2565b9150610da483610ad2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ddd57610ddc610bb8565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e2282610ad2565b9150610e2d83610ad2565b925082610e3d57610e3c610de8565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e6781610e48565b8114610e7257600080fd5b50565b600081519050610e8481610e5e565b92915050565b6000819050919050565b610e9d81610e8a565b8114610ea857600080fd5b50565b600081519050610eba81610e94565b92915050565b600081519050610ecf81610b06565b92915050565b600080600080600060a08688031215610ef157610ef0610a62565b5b6000610eff88828901610e75565b9550506020610f1088828901610eab565b9450506040610f2188828901610ec0565b9350506060610f3288828901610ec0565b9250506080610f4388828901610e75565b9150509295509295909350565b6000610f5b82610e8a565b9150610f6683610e8a565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610fa557610fa4610bb8565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610fe257610fe1610bb8565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561101f5761101e610bb8565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561105c5761105b610bb8565b5b82820290509291505056fea26469706673582212203a0911705f32bf571734ad05563fb0a65f76f8eecbf80c2a7c753fca8dc3b63064736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}